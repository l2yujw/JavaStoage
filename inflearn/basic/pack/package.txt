* 큰 프로그램 ```
    User
    UserManager
    UserHistory
    Product
    ProductCatalog
    ProductImage
    Order
    OrderService
    OrderHistory
    ShoppingCart
    CartItem
    Payment
    PaymentHistory
    Shipment
    ShipmentTracker

    *정리
        * user
         * User
         * UserManager
         * UserHistory
        * product
         * Product
         * ProductCatalog
         * ProductImage
        * order
         * Order
         * OrderService
         * OrderHistory
        * cart
         * ShoppingCart
         * CartItem
        * payment
         * Payment
         * PaymentHistory
        * shipping
         * Shipment
         * ShipmentTracker

* 패키지 규칙

    - 패키지의 이름과 위치는 폴더(디렉토리) 위치와 같아야 한다. (필수)
    - 패키지 이름은 모두 소문자를 사용한다. (관례)
    - 패키지 이름의 앞 부분에는 일반적으로 회사의 도메인 이름을 거꾸로 사용한다. 예를 들어,
    - com.company.myapp 과 같이 사용한다. (관례)
        @ 이 부분은 필수는 아니다. 하지만 수 많은 외부 라이브러리가 함께 사용되면 같은 패키지에 같은 클래스 이름이 존재할 수도 있다.
          이렇게 도메인 이름을 거꾸로 사용하면 이런 문제를 방지할 수 있다.
        @ 내가 오픈소스나 라이브러리를 만들어서 외부에 제공한다면 꼭 지키는 것이 좋다.
        @ 내가 만든 애플리케이션을 다른 곳에 공유하지 않고, 직접 배포한다면 보통 문제가 되지 않는다


* 패키지와 계층 구조

    - 패키지는 보통 다음과 같이 계층 구조를 이룬다.
        o a
            o b
            o c
    이렇게 하면 다음과 같이 총 3개의 패키지가 존재한다.
    a , a.b , a.c


* 패키지 활용
        * 전체 구조도
            @ com.helloshop
                - user
                    - User
                    - UserService
            @ product
                    - Product
                    - ProductService
            @ order
                    - Order
                    - OrderService
                    - OrderHistory