* 스트림

    1. 스트림은 데이터 소스를 변경하지 않는다.
    2. 스트림은 일회용이다
    3. 스트림은 작업을 내부 반복으로 처리한다.

    * 스트림 연산
        - 중간연산 : 연산 결과가 스트림인 연산. 스트림에 연속해서 중간 연산할 수 있음
        - 최종 연산 : 연산 결과가 스트림이 아닌 연산. 스트림의 요소를 소모하므로 단 한번만 가능
        stream.distinct().limit(5).sorted().forEach(System.out::println)
                중간 연산   중간 연산 중간 연산         최종 연산

    * 스트림의 최종 연산
        - forEach() : 스트림의 요소를 출력하는 용도
        - findFirst() : 스트림의 요소 중에서 조건에 일치하는 첫 번째 것을 반환, 주로 filter()와 함께 사용되어 조건에 맞는 스트림의 요소가 있는지 확인
        - findAny() : 병렬스트림일때 사용